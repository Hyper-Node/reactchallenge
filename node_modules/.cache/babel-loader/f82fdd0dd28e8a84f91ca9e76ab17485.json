{"ast":null,"code":"import { makeAutoObservable, runInAction } from \"mobx\";\nimport { ActionResultStatus } from \"../../../types/global\";\nimport { resultOrError } from \"../../../utils/global\";\nexport default class UserStore {\n  // init function\n  constructor() {\n    this.user = null;\n    makeAutoObservable(this);\n  }\n\n  // actions\n  async getOwnUser() {\n    const [result, error] = await resultOrError(new Promise(resolve => setTimeout(() => resolve({\n      firstName: \"Aria\",\n      lastName: \"Test\",\n      eMail: \"linda.bolt@osapiens.com\"\n    }), 500)));\n    if (!!error) {\n      return {\n        status: ActionResultStatus.ERROR,\n        error\n      };\n    }\n    if (result) {\n      runInAction(() => {\n        this.urser = result;\n      });\n      return {\n        status: ActionResultStatus.SUCCESS,\n        result: result\n      };\n    }\n    return {\n      status: ActionResultStatus.ERROR,\n      error: \"Something went wrong.\"\n    };\n  }\n}","map":{"version":3,"names":["makeAutoObservable","runInAction","ActionResultStatus","resultOrError","UserStore","constructor","user","getOwnUser","result","error","Promise","resolve","setTimeout","firstName","lastName","eMail","status","ERROR","urser","SUCCESS"],"sources":["/home/johannes/osapienscode/src/api/services/User/store.ts"],"sourcesContent":["import { makeAutoObservable, runInAction } from \"mobx\";\nimport {\n  ActionError,\n  ActionResultStatus,\n  ActionSuccess\n} from \"../../../types/global\";\nimport { resultOrError, ResultOrErrorResponse } from \"../../../utils/global\";\n\nexport interface User {\n  firstName?: string;\n  lastName?: string;\n  eMail?: string;\n}\n\nexport default class UserStore {\n  user: User | null = null;\n\n  // init function\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  // actions\n  async getOwnUser() {\n    const [result, error] = (await resultOrError(\n      new Promise((resolve) =>\n        setTimeout(\n          () =>\n            resolve({\n              firstName: \"Aria\",\n              lastName: \"Test\",\n              eMail: \"linda.bolt@osapiens.com\"\n            }),\n          500\n        )\n      )\n    )) as ResultOrErrorResponse<User>;\n\n    if (!!error) {\n      return {\n        status: ActionResultStatus.ERROR,\n        error\n      } as ActionError;\n    }\n\n    if (result) {\n      runInAction(() => {\n        this.urser = result;\n      });\n\n      return {\n        status: ActionResultStatus.SUCCESS,\n        result: result\n      } as ActionSuccess<User>;\n    }\n\n    return {\n      status: ActionResultStatus.ERROR,\n      error: \"Something went wrong.\"\n    } as ActionError;\n  }\n}\n"],"mappings":"AAAA,SAASA,kBAAkB,EAAEC,WAAW,QAAQ,MAAM;AACtD,SAEEC,kBAAkB,QAEb,uBAAuB;AAC9B,SAASC,aAAa,QAA+B,uBAAuB;AAQ5E,eAAe,MAAMC,SAAS,CAAC;EAG7B;EACAC,WAAWA,CAAA,EAAG;IAAA,KAHdC,IAAI,GAAgB,IAAI;IAItBN,kBAAkB,CAAC,IAAI,CAAC;EAC1B;;EAEA;EACA,MAAMO,UAAUA,CAAA,EAAG;IACjB,MAAM,CAACC,MAAM,EAAEC,KAAK,CAAC,GAAI,MAAMN,aAAa,CAC1C,IAAIO,OAAO,CAAEC,OAAO,IAClBC,UAAU,CACR,MACED,OAAO,CAAC;MACNE,SAAS,EAAE,MAAM;MACjBC,QAAQ,EAAE,MAAM;MAChBC,KAAK,EAAE;IACT,CAAC,CAAC,EACJ,GACF,CACF,CACF,CAAiC;IAEjC,IAAI,CAAC,CAACN,KAAK,EAAE;MACX,OAAO;QACLO,MAAM,EAAEd,kBAAkB,CAACe,KAAK;QAChCR;MACF,CAAC;IACH;IAEA,IAAID,MAAM,EAAE;MACVP,WAAW,CAAC,MAAM;QAChB,IAAI,CAACiB,KAAK,GAAGV,MAAM;MACrB,CAAC,CAAC;MAEF,OAAO;QACLQ,MAAM,EAAEd,kBAAkB,CAACiB,OAAO;QAClCX,MAAM,EAAEA;MACV,CAAC;IACH;IAEA,OAAO;MACLQ,MAAM,EAAEd,kBAAkB,CAACe,KAAK;MAChCR,KAAK,EAAE;IACT,CAAC;EACH;AACF"},"metadata":{},"sourceType":"module"}