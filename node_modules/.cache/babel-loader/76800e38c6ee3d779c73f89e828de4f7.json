{"ast":null,"code":"export const validateParams = (path, params) => {\n  if (!(params instanceof Object)) return false;\n  const paramSet = new Set(Object.keys(params));\n\n  // Validate params\n  const requiredParams = path.split(\"/\").filter(s => s.startsWith(\":\")).map(s => s.substr(1));\n  for (const param of requiredParams) {\n    if (!paramSet.has(param)) return false;\n  }\n  return true;\n};\n\n// build a valid url with the path and its parameters\nexport const buildUrl = (path, params) => {\n  let ret = path;\n\n  // Upcast `params` to be used in string replacement.\n  const paramObj = params;\n  for (const key of Object.keys(paramObj)) {\n    ret = ret.replace(\":\".concat(key), paramObj[key]);\n  }\n  return ret;\n};","map":{"version":3,"names":["validateParams","path","params","Object","paramSet","Set","keys","requiredParams","split","filter","s","startsWith","map","substr","param","has","buildUrl","ret","paramObj","key","replace","concat"],"sources":["/home/johannes/osapienscode/src/utils/router.ts"],"sourcesContent":["import { PathParams } from \"../types/global\";\n\nexport const validateParams = <ERoute extends string>(\n  path: ERoute,\n  params: unknown\n): params is PathParams => {\n  if (!(params instanceof Object)) return false;\n\n  const paramSet = new Set(Object.keys(params));\n\n  // Validate params\n  const requiredParams = path\n    .split(\"/\")\n    .filter((s) => s.startsWith(\":\"))\n    .map((s) => s.substr(1));\n\n  for (const param of requiredParams) {\n    if (!paramSet.has(param)) return false;\n  }\n\n  return true;\n};\n\n// build a valid url with the path and its parameters\nexport const buildUrl = <ERoute extends string>(\n  path: ERoute,\n  params: PathParams\n): string => {\n  let ret: string = path;\n\n  // Upcast `params` to be used in string replacement.\n  const paramObj: { [i: string]: string } = params;\n\n  for (const key of Object.keys(paramObj)) {\n    ret = ret.replace(`:${key}`, paramObj[key]);\n  }\n\n  return ret;\n};\n"],"mappings":"AAEA,OAAO,MAAMA,cAAc,GAAGA,CAC5BC,IAAY,EACZC,MAAe,KACU;EACzB,IAAI,EAAEA,MAAM,YAAYC,MAAM,CAAC,EAAE,OAAO,KAAK;EAE7C,MAAMC,QAAQ,GAAG,IAAIC,GAAG,CAACF,MAAM,CAACG,IAAI,CAACJ,MAAM,CAAC,CAAC;;EAE7C;EACA,MAAMK,cAAc,GAAGN,IAAI,CACxBO,KAAK,CAAC,GAAG,CAAC,CACVC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,UAAU,CAAC,GAAG,CAAC,CAAC,CAChCC,GAAG,CAAEF,CAAC,IAAKA,CAAC,CAACG,MAAM,CAAC,CAAC,CAAC,CAAC;EAE1B,KAAK,MAAMC,KAAK,IAAIP,cAAc,EAAE;IAClC,IAAI,CAACH,QAAQ,CAACW,GAAG,CAACD,KAAK,CAAC,EAAE,OAAO,KAAK;EACxC;EAEA,OAAO,IAAI;AACb,CAAC;;AAED;AACA,OAAO,MAAME,QAAQ,GAAGA,CACtBf,IAAY,EACZC,MAAkB,KACP;EACX,IAAIe,GAAW,GAAGhB,IAAI;;EAEtB;EACA,MAAMiB,QAAiC,GAAGhB,MAAM;EAEhD,KAAK,MAAMiB,GAAG,IAAIhB,MAAM,CAACG,IAAI,CAACY,QAAQ,CAAC,EAAE;IACvCD,GAAG,GAAGA,GAAG,CAACG,OAAO,KAAAC,MAAA,CAAKF,GAAG,GAAID,QAAQ,CAACC,GAAG,CAAC,CAAC;EAC7C;EAEA,OAAOF,GAAG;AACZ,CAAC"},"metadata":{},"sourceType":"module"}